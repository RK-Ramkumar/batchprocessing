<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd		
	">

		
	<bean id = "transactionManager"
   		class = "org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
   	<bean id = "jobLauncher" 
   		class = "org.springframework.batch.core.launch.support.SimpleJobLauncher"> 
   		<property name = "jobRepository" ref = "jobRepository" /> 
	</bean>	
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:defaultBatchDB" />
		<property name="username" value="rkroot" />
		<property name="password" value="pwd" />
	</bean>
	
	<bean id = "jobRepository" 
   		class = "org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"> 
   			<property name = "dataSource" ref = "dataSource" /> 
  		 	<property name = "transactionManager" ref="transactionManager" /> 
	</bean> 
	
<!--<jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:org/springframework/batch/core/schema-drop-h2.sql" />
        <jdbc:script location="classpath:org/springframework/batch/core/schema-h2.sql" />
    </jdbc:initialize-database>-->
		
		
	<bean id="planetInfo" class="com.smashcorp.batchprocessing.jobflow.model.PlanetInfo"
		scope="prototype" />
	<bean id="customItemProcessor" class="com.smashcorp.batchprocessing.jobflow.processor.CustomItemProcessor" />
	<bean id="customItemWriter" class="com.smashcorp.batchprocessing.jobflow.writer.CustomItemWriter"/>

	<batch:job id="ReaderWriterJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="customItemReader" writer="customItemWriter"
					processor="customItemProcessor" commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="customItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<property name="resource" value="classpath:data/input/planetInfo.csv" />
        <property name="linesToSkip" value="1" />

		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="Id,Name,Category,Habitable" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.smashcorp.batchprocessing.jobflow.reader.CustomFieldSetMapper" />
				</property>
			</bean>
		</property>

	</bean>


</beans>